# Copyright (c) Meta Platforms, Inc. and its affiliates.
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Read the project version from the VERSION file.
{% set match = load_file_regex(load_file="VERSION", regex_pattern="^.*$") %}

# Set the package version.
{% if environ.get("TORCHDIST_SERVER_BUILD", "") != "" %}
  {% set version = match[0] + environ.get("TORCHDIST_PEP440_PRE_RELEASE", "") %}
{% else %}
  {% set version = match[0] + ".dev0" %}
{% endif %}

# Set the package build string.
{% if cuda != "None"  %}
  {% set build_str = "py{}_cu{}".format(python, cuda) %}
{% else %}
  {% set build_str = "py{}_cpu" .format(python) %}
{% endif %}

# Remove the version dots to shorten the package name.
{% set build_str = build_str.replace(".", "") %}

package:
  name: torchdistx-cc
  version: {{ version }}

source:
  path: ../../

build:
  number: 0
  string: {{ build_str }}
  skip: True  # [not unix]
  script_env:
    - CUDA_HOME={{ cuda_home }}  # [cuda != "None"]
  run_exports:
    # We do not maintain ABI compatibility between releases.
    - {{ pin_subpackage("torchdistx-cc", exact=True) }}
  ignore_run_exports:
    - cudatoolkit
    - cudnn
    # Since we need an exact version of PyTorch anyways we don't have to export
    # its mutex to our runtime requirements.
    - pytorch-mutex
  # libc10 and libtorch do not have their own packages. They are distributed
  # with the pytorch package and reside under the `lib` sub-directory of the
  # Python library. Therefore they are not discoverable by Conda and have to
  # be listed here.
  missing_dso_whitelist:
    - "*/libc10*"
    - "*/libtorch*"

requirements:
  build:
    - {{ compiler("cxx") }}     # [cuda == "None"]
    - {{ cuda_host_compiler }}  # [cuda != "None"]
    - cmake
    - ninja
    - nvcc_linux-64 {{ cuda }}  # [cuda != "None"]
  host:
    - cudatoolkit {{ cuda }}    # [cuda != "None"]
    - cudnn {{ cudnn }}         # [cuda != "None"]
    - python {{ python }}
    - pytorch {{ pytorch }}
    - pytorch-mutex 1.0 {{ pytorch_variant }}
  run:
    # We require the exact same version of PyTorch during runtime since PyTorch
    # does not offer ABI compatibility.
    - {{ pin_compatible("pytorch", exact=True) }}

test:
  commands:
    - test -f "$PREFIX/lib/libtorchdistx.so.0"     # [linux]
    - test -f "$PREFIX/lib/libtorchdistx.0.dylib"  # [osx]

outputs:
  # This package contains the DSO (i.e. libtorchdistx.so).
  - name: torchdistx-cc
    script: install-lib.sh

  # This package contains the header files, CMake package configuration, and
  # soname symbolic link required for development.
  - name: torchdistx-cc-devel
    script: install-devel.sh
    build:
      string: {{ build_str }}
      run_exports:
        - {{ pin_subpackage("torchdistx-cc", exact=True) }}
    requirements:
      build:
        - cmake
      run:
        - {{ pin_subpackage("torchdistx-cc", exact=True) }}
    test:
      commands:
        - test -f "$PREFIX/lib/libtorchdistx.so"     # [linux]
        - test -f "$PREFIX/lib/libtorchdistx.dylib"  # [osx]
    about:
      home: https://github.com/pytorch/torchdistx
      license: BSD
      license_file: LICENSE
      summary: torchdistX C++ Runtime Library Development Files

  # This package contains the debug (i.e. DWARF) symbols of the DSO.
  - name: torchdistx-cc-debug
    script: install-debug.sh
    build:
      string: {{ build_str }}
      run_exports:
        - {{ pin_subpackage("torchdistx-cc", exact=True) }}
    requirements:
      build:
        - cmake
      run:
        - {{ pin_subpackage("torchdistx-cc", exact=True) }}
    about:
      home: https://github.com/pytorch/torchdistx
      license: BSD
      license_file: LICENSE
      summary: torchdistX C++ Runtime Library Debug Symbols

  # This package contains the Python library.
  - name: torchdistx
    script: install-python.sh
    build:
      string: {{ build_str }}
      # These environment variables are used by setup.py.
      script_env:
        - TORCHDIST_SERVER_BUILD
        - TORCHDIST_PEP440_PRE_RELEASE
      run_exports:
        - {{ pin_subpackage("torchdistx", exact=True) }}
      # See the torchdistx-cc package above for why we need this list.
      missing_dso_whitelist:
        - "*/libc10*"
        - "*/libtorch*"
    requirements:
      build:
        # We need the compiler here to implicitly export the platform-specific
        # C++ standard library to the runtime requirements. This is needed for
        # our Python C extension.
        - {{ compiler("cxx") }}
        - cmake
      host:
        # We import PyTorch in setup.py to retrieve its version information.
        - {{ pin_compatible("pytorch", exact=True) }}
        - pip
        - python {{ python }}
        - setuptools
        - wheel
      run:
        - {{ pin_compatible("pytorch", exact=True) }}
        - {{ pin_subpackage("torchdistx-cc", exact=True) }}
    test:
      imports:
        - torchdistx.deferred_init
        - torchdistx.fake
    about:
      home: https://github.com/pytorch/torchdistx
      license: BSD
      license_file: LICENSE
      summary: torchdistX Python Library

about:
  home: https://github.com/pytorch/torchdistx
  license: BSD
  license_file: LICENSE
  summary: torchdistX C++ Runtime Library

extra:
  maintainers:
    - PyTorch Distributed Team
